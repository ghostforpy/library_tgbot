version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_traefik: {}
  production_django_media: {}
  production_django_static: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile

    image: library_tgbot_production_django
    volumes:
      - production_django_media:/app/library_tgbot/media
      - production_django_static:/app/staticfiles
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    environment:
      - MAIN_CONTAINER=1
      - TG_CLIENT=0
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: library_tgbot_production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres

  traefik:
    build:
      context: .
      dockerfile: ./compose/production/traefik/Dockerfile
    image: library_tgbot_production_traefik
    depends_on:
      - django
    volumes:
      - production_traefik:/etc/traefik/acme
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"
      - "0.0.0.0:5555:5555"

  redis:
    image: redis:6

  celeryworker:
    <<: *django
    environment:
      - MAIN_CONTAINER=0
      - TG_CLIENT=0
    image: library_tgbot_production_celeryworker
    command: /start-celeryworker

  celeryworker_msg:
    <<: *django
    environment:
      - MAIN_CONTAINER=0
      - TG_CLIENT=0
    image: library_tgbot_production_celeryworker_msg
    command: /start-celeryworker-msg

  celeryworker_tgclient:
    <<: *django
    environment:
      - MAIN_CONTAINER=0
      - TG_CLIENT=1
      - DJANGO_ALLOW_ASYNC_UNSAFE=true
    image: library_tgbot_production_celeryworker_tgclient
    command: /start-celeryworker-tgclient

  celerybeat:
    <<: *django
    environment:
      - MAIN_CONTAINER=0
      - TG_CLIENT=0
    image: library_tgbot_production_celerybeat
    command: /start-celerybeat

  flower:
    <<: *django
    environment:
      - MAIN_CONTAINER=0
      - TG_CLIENT=0
    image: library_tgbot_production_flower
    command: /start-flower

  nginx:
    build:
      context: .
      dockerfile: ./compose/production/nginx/Dockerfile
    image: library_tgbot_local_nginx
    depends_on:
      - django
    volumes:
      - production_django_media:/usr/share/nginx/media:ro
      - production_django_static:/usr/share/nginx/static:ro
