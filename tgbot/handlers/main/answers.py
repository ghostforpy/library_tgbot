from config.constants import StatusCode
from tgbot.models import User
from tgbot.handlers.keyboard import make_keyboard
from django.utils.translation import gettext as _
from django.utils.translation import override as translation_override

EMPTY = {}
CANCEL = {"cancel": "–û—Ç–º–µ–Ω–∞"}
CANCEL_SKIP = {"cancel": "–û—Ç–º–µ–Ω–∞", "skip": "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"}
OK = {"ok": "OK"}
START = {"start": "/start"}
YES_NO = {"yes": "–î–∞", "no": "–ù–µ—Ç"}


TO_ADMINS = {"to_admins": "–°–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"}


full_menu = lambda: {
    "library": _("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞"),
}

start_menu_short = lambda: {
    # "profile":"üñä " + _("–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"),
    "contact_us": _("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏")
}


start_menu_admin = lambda: {
    "library": _("–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞"),
}


def get_start_menu(user: User):
    with translation_override(user.language):
        if user.is_banned:
            return make_keyboard(TO_ADMINS, "inline", 1)
        elif user.is_blocked_bot or not user.verified_by_admin:
            return make_keyboard(start_menu_short(), "inline", 1)
        elif user.is_admin:
            return make_keyboard(
                start_menu_admin(), "inline", 1, footer_buttons=start_menu_short()
            )
        else:
            return make_keyboard(
                start_menu_short(), "inline", 1, footer_buttons=start_menu_short()
            )
