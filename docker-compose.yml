version: '3'

volumes:
  library_tgbot_local_postgres_data: {}
  library_tgbot_local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: library_tgbot_local_django
    container_name: library_tgbot_local_django
    depends_on:
      - postgres
      - redis
      # - mailhog
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
      - MAIN_CONTAINER=1
      # - LOGGING_SQL=True
    ports:
      - "8000:8000"
    command: /start

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: library_tgbot_production_postgres
    container_name: library_tgbot_local_postgres
    volumes:
      - library_tgbot_local_postgres_data:/var/lib/postgresql/data
      - library_tgbot_local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres

  bot:
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile.bot
    container_name: library_tgbot_bot
    command: python manage.py run_local_bot
    # command: python run_pooling.py
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    environment:
      - MAIN_CONTAINER=0
    depends_on:
      - django
      - postgres

  # docs:
  #   image: library_tgbot_local_docs
  #   container_name: library_tgbot_local_docs
  #   build:
  #     context: .
  #     dockerfile: ./compose/local/docs/Dockerfile
  #   env_file:
  #     - ./.envs/.local/.django
  #   volumes:
  #     - ./docs:/docs:z
  #     - ./config:/app/config:z
  #     - ./library_tgbot:/app/library_tgbot:z
  #   ports:
  #     - "9000:9000"
  #   command: /start-docs

  # mailhog:
  #   image: mailhog/mailhog:v1.0.0
  #   container_name: library_tgbot_local_mailhog
  #   ports:
  #     - "8025:8025"

  redis:
    image: redis:6
    container_name: library_tgbot_local_redis

  celeryworker:
    <<: *django
    image: library_tgbot_local_celeryworker
    container_name: library_tgbot_local_celeryworker
    environment:
      - MAIN_CONTAINER=0
    depends_on:
      - redis
      - postgres
      # - mailhog
    ports: []
    command: /start-celeryworker

  celeryworker_msg:
    <<: *django
    image: library_tgbot_local_celeryworker_msg
    container_name: library_tgbot_local_celeryworker_msg
    environment:
      - MAIN_CONTAINER=0
    depends_on:
      - redis
      - postgres
      # - mailhog
    ports: []
    command: /start-celeryworker-msg


  celerybeat:
    <<: *django
    image: library_tgbot_local_celerybeat
    container_name: library_tgbot_local_celerybeat
    environment:
      - MAIN_CONTAINER=0
      - TG_CLIENT=0
    depends_on:
      - redis
      - postgres
      # - mailhog
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: library_tgbot_local_flower
    container_name: library_tgbot_local_flower
    environment:
      - MAIN_CONTAINER=0
    ports:
      - "5555:5555"
    command: /start-flower

  reverse_proxy:
    image: nginx:latest
    depends_on:
      - django
    volumes:
      - ./compose/local/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./compose/local/nginx/nginx-selfsigned.crt:/etc/nginx/ssl/certs/localhost.crt
      - ./compose/local/nginx/nginx-selfsigned.key:/etc/ssl/private/localhost.key
      - ./compose/local/nginx/dhparam.pem:/etc/nginx/ssl/certs/dhparam.pem
      - ./compose/local/nginx/options-ssl-nginx.conf:/etc/nginx/ssl/options-ssl-nginx.conf
      - ./library_tgbot/media:/web/media:z
    network_mode: host